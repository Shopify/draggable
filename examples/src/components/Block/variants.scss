////
/// Components
/// Block variants
////

@import 'utilities/shared/layout';
@import 'components/Patterns/props';

///
/// BlockLayout
.BlockLayout--typeFlex,
.BlockLayout--typeFloat {
  margin-top: -#{get-border(thin)};
  margin-left: -#{get-border(thin)};

  .Block {
    padding-top: get-border(thin);
    padding-left: get-border(thin);
  }

  @media screen and (min-width: get-breakpoint(tablet)) {
    margin-top: -#{get-border()};
    margin-left: -#{get-border()};

    .Block {
      padding-top: get-border();
      padding-left: get-border();
    }
  }
}

.BlockLayout--typeFlex {
  display: flex;
  flex-wrap: wrap;

  .Block {
    flex: 1 1 100%;
  }
}

.BlockLayout--typeFloat {
  @include clearfix;

  .Block {
    float: left;
    width: 100%;
  }
}

.BlockLayout--typeGrid {
  display: grid;
  grid-gap: get-border(thin);

  @media screen and (min-width: get-breakpoint(tablet)) {
    grid-gap: get-border();
  }
}

.BlockLayout--typePositioned {
  position: relative;
}

///
/// Block types
.Block--typeShell {
  .BlockContent {
    color: get-color(coal, dark);
    background-color: white;
    border-color: currentColor;
  }
}

.Block--typeHollow {
  .BlockContent {
    color: get-color(ash, dark);
    background-color: white;
    border-color: currentColor;
  }
}

.Block--typeStripes {
  .BlockContent {
    @include stripes-bg;
    color: get-color(coal, dark);
    border-color: currentColor;
    transition: color get-duration(fast) get-easing();
  }
}

///
/// Draggable Blocks
.Block--isDraggable {
  cursor: get-cursor(drag);

  .BlockContent {
    @include halftone-bg-placeholder;
    color: get-color(coal, dark);
    background-color: white;
    border-color: currentColor;
    transition:
      color get-duration(fast) get-easing(),
      background-color get-duration(fast) get-easing(),
      transform get-duration() get-easing(bungie);
  }

  // interaction
  &:focus .BlockContent,
  &:hover .BlockContent {
    color: get-color(brand, blue);
  }

  &.draggable-source--is-dragging .BlockContent {
    @include halftone-bg-animated;
    color: get-color(brand, blue);
  }

/*
  &.draggable-source--placed .BlockContent {
    &::before {
      @include position-cover;
      content: '';
      display: block;
      background-color: get-color(brand, blue);
      animation: test get-duration() get-easing() both;
    }
  }
*/

  &.draggable-mirror {
    z-index: get-z-index(overlay);

    .BlockContent {
      color: white;
      background-color: get-color(brand, blue);
      border-color: get-color(brand, blue);
      transform: scale(1.025);
    }
  }
}

/*
span:hover {
  ~ .draggable-mirror .BlockContent {
    background-color: get-color(brand, purple);
    border-color: get-color(brand, purple);
  }
}
*/

///
/// Droppable
.BlockWrapper {
  position: relative;

  &.draggable-droppable--occupied {
    .Block--typeHollow,
    .Block--typeStripes {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    }
  }
}

///
/// Collidable
.Block--typeStripes {
  &.isColliding {
    .BlockContent {
      color: get-color(brand, red);
    }
  }
}
